<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACoqKjArKyu/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysrvyoqKjAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACsrKxIrKyuhKysr/ysrK/8rKyu3LS0tKAAAAAAAAAAALS0tKCsrK7crKyv/Kysr/ysr
        K6ErKysSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAqKip/Kysr/ysrK/8rKyv/Kysr/ysrK/8rKyv/Kysr3CsrK9wrKyv/Kysr/ysr
        K/8rKyv/Kysr/ysrK/8qKip/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAApKSk4Kysr5SsrK/8rKyv/Kysr0CsrK0cqKipJKysruSsrK/8rKyv/Kysr/ysr
        K/8rKyu5KioqSSsrK0crKyvQKysr/ysrK/8rKyvlKSkpOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKyv/Kysr/ysrK14AAAAAAAAAAAAAAAAAAAAAJiYmFCsr
        Ky8rKysvJiYmFAAAAAAAAAAAAAAAAAAAAAArKyteKysr/ysrK/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrK78rKyv/KioqgAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoqKoArKyv/KysrvwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysr4SsrK/8rKytHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysrRysrK/8rKyvhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwsLEYrKyv/Kysr6CQk
        JA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQOKysr6Csr
        K/8sLCxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCxFKysr3ysr
        K/8rKyuOAAAAAAAAAAAAAAAAAAAAAAAAAACHq9Vbh6zVn4Wr1JWHq9VVAAAAAAAAAAAAAAAAAAAAAAAA
        AAArKyuOKysr/ysrK98sLCxFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqKipDLCwsnSsr
        K/8rKyv/Kysr1CsrKyoAAAAAAAAAAAAAAAAAAAAAhq3Vqoas1f+GrNX/hqzV/4as1f+GrdTMAAAAAAAA
        AAAAAAAAAAAAACsrKyorKyvUKysr/ysrK/8sLCydKioqQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsr
        K78rKyv/Kysr/ysrK7IrKysqAAAAAAAAAAAAAAAAAAAAAIat1MyGrNX/hqzV/4as1r+GrdWqhqzV/4as
        1f+GrdWqAAAAAAAAAAAAAAAAAAAAACsrKyorKyuyKysr/ysrK/8rKyu/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKysrvysrK/8sLCxcAAAAAAAAAAAAAAAAAAAAAAAAAACHq9VVhqzV/4as1f+Dq9NAAAAAAAAA
        AACDq9NAhqzV/4as1f+Hq9VbAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCxcKysr/ysrK78AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAArKyu/Kysr/ywsLEAAAAAAAAAAAAAAAAAAAAAAAAAAAIWr1JWGrNX/hq3VqgAA
        AAAAAAAAAAAAAAAAAACGrNa/hqzV/4es1Z8AAAAAAAAAAAAAAAAAAAAAAAAAACwsLEArKyv/KysrvwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrK78rKyv/LCwsQAAAAAAAAAAAAAAAAAAAAAAAAAAAhavUlYas
        1f+GrdWqAAAAAAAAAAAAAAAAAAAAAIas1r+GrNX/h6zVnwAAAAAAAAAAAAAAAAAAAAAAAAAALCwsQCsr
        K/8rKyu/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysrvysrK/8qKipgAAAAAAAAAAAAAAAAAAAAAAAA
        AACHq9VVhqzV/4as1f+Dq9NAAAAAAAAAAACDq9NAhqzV/4as1f+Hq9VbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAqKipgKysr/ysrK78AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKyu/Kysr/ysrK/8rKyu8KysrKgAA
        AAAAAAAAAAAAAAAAAACGrdTMhqzV/4as1f+GrNa/hq3Vqoas1f+GrNX/hq3VqgAAAAAAAAAAAAAAAAAA
        AAArKysqKysrvCsrK/8rKyv/KysrvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrK1grKyuuKysr/ysr
        K/8rKyvUKysrKgAAAAAAAAAAAAAAAAAAAACGrdWqhqzV/4as1f+GrNX/hqzV/4at1MwAAAAAAAAAAAAA
        AAAAAAAAKysrKisrK9QrKyv/Kysr/ysrK64rKytYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAsLCxFKysr4SsrK/8rKyuOAAAAAAAAAAAAAAAAAAAAAAAAAACHq9Vbh6zVn4Wr1JWHq9VVAAAAAAAA
        AAAAAAAAAAAAAAAAAAArKyuOKysr/ysrK+EsLCxFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAsLCxLKysr/ysrK+gnJycNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJycnDSsrK+grKyv/LCwsSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKyvfKysr/ywsLEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCxAKysr/ysrK98AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrK78rKyv/KioqgAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoqKoArKyv/KysrvwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysr/ysrK/8rKyteAAAAAAAA
        AAAAAAAAAAAAADExMRUpKSkyKSkpMjExMRUAAAAAAAAAAAAAAAAAAAAAKysrXisrK/8rKyv/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrKzUrKyvlKysr/ysr
        K/8rKyvOLCwsRS0tLTksLCyqKysr/ysrK/8rKyv/Kysr/ywsLKotLS05LCwsRSsrK84rKyv/Kysr/ysr
        K+UrKys1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAsLCx7Kysr/ysrK/8rKyv/Kysr/ysrK/8rKyv/Kysr3ysrK98rKyv/Kysr/ysrK/8rKyv/Kysr/ysr
        K/8sLCx7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAtLS0RKysrmysrK/8rKyv/Kysrny0tLS0AAAAAAAAAAC0tLS0rKyufKysr/ysr
        K/8rKyubLS0tEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsLisrK78AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAArKyu/LCwsLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////+fn//+Bgf//AAD//AAAP/48PH/+P/x//j/8f/w/
        /D/4fD4f4HgeB+DwDwfj4YfH4+PHx+Pjx8fj4YfH4PAPB+B4Hgf4fD4f/D/8P/4//H/+P/x//jw8f/wA
        AD//AAD//4GB///n5/////////////////8=
</value>
  </data>
</root>